#!/usr/bin/env bash

# azlyrics doesn't like peeps cURLing stuff so set a custom useragent
#
USERAGENT="User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0"
ARTIST="$(playerctl -p cmus metadata xesam:artist)"
SONG="$(playerctl -p cmus metadata xesam:title)"

# get metadata via playerctl, convert it all to lowercase, remove any articles
# at the beginning, and remove anything
# that is not alphanumeric, since that's how azlyrics appears to format their
# URLs
#
STRIPPED_ARTIST="$( echo $ARTIST \
	| tr '[:upper:]' '[:lower:]' \
	| sed -e 's/[^a-z0-9]//g' \
	| sed -e 's/^the//' )"

# additionally, remove any features from the titles, since azlyrics doesn't
# include that either
#
STRIPPED_SONG="$( echo $SONG \
	| tr '[:upper:]' '[:lower:]' \
	| sed -E 's/\((feat.*|ft.*)\)//g' \
	| sed -e 's/[^a-z0-9]//g' \
	| sed -e 's/^the//')"

echo $SONG by $ARTIST, from azlyrics.com
echo "(https://www.azlyrics.com/lyrics/$STRIPPED_ARTIST/$STRIPPED_SONG.html)"
echo

# azlyrics.com has some html errors and this silences this as well as curl's
# download indicator thingy
#
exec 2> /dev/null 

# finally, grab, extract, clean, and display the lyrics
curl -H "$USERAGENT" "https://www.azlyrics.com/lyrics/$STRIPPED_ARTIST/$STRIPPED_SONG.html" \
 	| xmllint --html --xpath '/html/body/div[3]/div/div[2]/div[5]' - \
	| sed -e 's/<[^>]*>//g' \
	| tail -n +3 \
	| head -c -1
