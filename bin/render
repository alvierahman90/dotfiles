#!/usr/bin/env python3

def parse_args():
    import argparse
    from os.path import expanduser

    parser = argparse.ArgumentParser()
    parser.add_argument('-s', '--silent', help='Suppress all output',
                        action='store_true')
    parser.add_argument('-e', '--extension', help='Specify output file'
                        'by extension (e.g. html). Defaults to pdf', type=str,
                        default='pdf')
    parser.add_argument('-o', '--output', help='Specify output filename'
                        'without extension', type=str, default=None)
    parser.add_argument('-t', '--template', help='Specify template',
                        type=str, default=expanduser('~/.pandoc/default.latex'))
    parser.add_argument('-f', '--fontsize', help='Set font size',
                        type=str, default="10pt")
    parser.add_argument('input', help='Specify input file', type=str)
    return parser.parse_args()

def main():
    import subprocess
    import time

    start_time = time.time()
    args = parse_args()

    file_base = args.output if args.output else args.input

    output = subprocess.run(['pandoc', '-o', file_base + '.' + args.extension,
                             '--template', args.template, '-V', 
                             'fontsize=' + args.fontsize,args.input],
                            stdout=subprocess.PIPE, stderr=subprocess.PIPE)


    if not args.silent:
        if output.stdout:
            print(output.stdout.decode('utf-8'))
        if output.stderr:
            print(output.stderr.decode('utf-8'))
        print("Time to finish: {0:.3f}s".format(time.time()-start_time))

if __name__ == "__main__":
    import sys
    sys.exit(main())
